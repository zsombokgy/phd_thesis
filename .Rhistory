geom_ribbon(aes(ymin = visregLwr, ymax = visregUpr), alpha=0.3, linetype=1, size=0.2) +
facet_wrap(~fr_name, ncol = 5) +
labs(x = "Time in years", y = "Probability of use") +
scale_x_continuous(limits = c(-156,156),
breaks = c(-156,-104,-52,0,52,104,156),
labels = c("-3", "-2", "-1","0", "1", "2", "3")) +
scale_y_continuous(limits = c(0,1), breaks = c(0,0.25,0.5,0.75,1),
labels = c("0",".25",".50",".75","1")) +
geom_vline(xintercept = 0, color = "red") +
theme(text = element_text(family = "Times"),
axis.title = element_text(size = 10),
axis.text = element_text(size = 7),
legend.text = element_text(size = 7),
strip.text = element_text(size = 7),
legend.position = "right",
strip.background = element_rect(fill = "white"),
panel.background = element_rect(fill = 'white', color = 'black'),
panel.grid.major = element_line(color = "grey95"),
panel.grid.minor = element_blank(),
panel.border = element_rect(fill = "NA"))
load("newspaper.Rda")
courriel <- newspaper %>%
filter(lexical == "email") %>%
select(type, source, time) %>%
group_by(type, time) %>%
count() %>%
spread(type, n) %>%
mutate(english = replace_na(english, 0),
prescribed = replace_na(prescribed, 0),
alternative = replace_na(alternative, 0),
percentage_en = english / (english + prescribed + alternative),
percentage_pr = prescribed / (english + prescribed + alternative),
percentage_alt = alternative / (english + prescribed + alternative)) %>%
ungroup() %>%
select(time, percentage_en, percentage_pr, percentage_alt) %>%
gather(type, percentage, -time) %>%
mutate(type = as.factor(type),
type = recode(type, "percentage_en" = "email",
"percentage_alt" = "mail",
"percentage_pr" = "courriel"),
type = relevel(as.factor(type), ref = "courriel"))
library(tidyverse)
library(ggplot2)
courriel <- newspaper %>%
filter(lexical == "email") %>%
select(type, source, time) %>%
group_by(type, time) %>%
count() %>%
spread(type, n) %>%
mutate(english = replace_na(english, 0),
prescribed = replace_na(prescribed, 0),
alternative = replace_na(alternative, 0),
percentage_en = english / (english + prescribed + alternative),
percentage_pr = prescribed / (english + prescribed + alternative),
percentage_alt = alternative / (english + prescribed + alternative)) %>%
ungroup() %>%
select(time, percentage_en, percentage_pr, percentage_alt) %>%
gather(type, percentage, -time) %>%
mutate(type = as.factor(type),
type = recode(type, "percentage_en" = "email",
"percentage_alt" = "mail",
"percentage_pr" = "courriel"),
type = relevel(as.factor(type), ref = "courriel"))
gg_courriel <- courriel %>%
ggplot(aes(x = time, y = percentage, color = type)) + geom_smooth(method = loess, se = FALSE) +
labs(x = "Time in years", y = "Distribution", color = "Type") +
scale_x_continuous(limits = c(-156,156),
breaks = c(-156,-104,-52,0,52,104,156),
labels = c("-3", "-2", "-1","prescription", "1", "2", "3")) +
scale_y_continuous(limits = c(0,1), breaks = c(0,0.25,0.5,0.75,1),
labels = c("0",".25",".50",".75","1")) +
geom_vline(xintercept = 0, color = "red") +
theme(text = element_text(family = "Times"),
axis.title = element_text(size = 10),
axis.text = element_text(size = 10),
legend.text = element_text(size = 10),
legend.position = "right",
strip.background = element_rect(fill = "white"),
panel.background = element_rect(fill = 'white', color = 'black'),
panel.grid.major = element_line(color = "grey95"),
panel.grid.minor = element_blank(),
panel.border = element_rect(fill = "NA"))
gg_courriel
courriel_sources <- newspaper %>%
filter(lexical == "email") %>%
select(type, source, time) %>%
group_by(type, time) %>%
count() %>%
spread(type, n) %>%
mutate(english = replace_na(english, 0),
prescribed = replace_na(prescribed, 0),
alternative = replace_na(alternative, 0),
percentage_en = english / (english + prescribed + alternative),
percentage_pr = prescribed / (english + prescribed + alternative),
percentage_alt = alternative / (english + prescribed + alternative)) %>%
ungroup() %>%
select(time, percentage_en, percentage_pr, percentage_alt) %>%
gather(type, percentage, -time) %>%
mutate(type = as.factor(type),
type = recode(type, "percentage_en" = "email",
"percentage_alt" = "mail",
"percentage_pr" = "courriel"),
type = relevel(as.factor(type), ref = "courriel"))
View(courriel)
courriel_source <- newspaper %>%
filter(lexical == "email") %>%
select(type, source, time) %>%
group_by(type, time) %>%
count() %>%
spread(type, n) %>%
mutate(english = replace_na(english, 0),
prescribed = replace_na(prescribed, 0),
alternative = replace_na(alternative, 0),
percentage_en = english / (english + prescribed + alternative),
percentage_pr = prescribed / (english + prescribed + alternative),
percentage_alt = alternative / (english + prescribed + alternative)) %>%
ungroup() %>%
select(time, percentage_en, percentage_pr, percentage_alt) %>%
gather(type, percentage, -time) %>%
mutate(type = as.factor(type),
type = recode(type, "percentage_en" = "email",
"percentage_alt" = "mail",
"percentage_pr" = "courriel"),
type = relevel(as.factor(type), ref = "courriel"))
source_colors <- c("La Croix" = "orange", "Le Figaro" = "steelblue1", "Le Monde" = "dodgerblue3",
"Le Parisien" = "purple", "Les Echos" = "red", "Journal du Net" = "black",
"01net" = "lightseagreen")
gg_courriel_sources <- courriel_source %>%
ggplot(aes(x = time, y = percentage, color = source)) + geom_smooth(method = loess, se = FALSE) +
scale_color_manual(values = source_colors) +
labs(x = "Time in years", y = "Distribution", color = "Newspaper") +
scale_x_continuous(limits = c(-156,156),
breaks = c(-156,-104,-52,0,52,104,156),
labels = c("-3", "-2", "-1","prescription", "1", "2", "3")) +
scale_y_continuous(limits = c(0,1), breaks = c(0,0.25,0.5,0.75,1),
labels = c("0",".25",".50",".75","1")) +
geom_vline(xintercept = 0, color = "red") +
theme(text = element_text(family = "Times"),
axis.title = element_text(size = 10),
axis.text = element_text(size = 10),
legend.text = element_text(size = 10),
legend.position = "right",
strip.background = element_rect(fill = "white"),
panel.background = element_rect(fill = 'white', color = 'black'),
panel.grid.major = element_line(color = "grey95"),
panel.grid.minor = element_blank(),
panel.border = element_rect(fill = "NA"))
gg_courriel_sources
View(courriel_source)
courriel_source <- newspaper %>%
filter(lexical == "email") %>%
select(type, source, time) %>%
group_by(type, source, time) %>%
count() %>%
View(courriel_source)
View(gg_courriel)
courriel_source <- newspaper %>%
filter(lexical == "email") %>%
select(type, source, time) %>%
group_by(type, source, time) %>%
count() %>%
vf
vfnlkvmd
courriel_source <- newspaper %>%
filter(lexical == "email") %>%
select(type, source, time) %>%
group_by(type, source, time) %>%
count()
View(courriel_source)
courriel_source <- newspaper %>%
filter(lexical == "email") %>%
select(type, source, time) %>%
group_by(type, source, time) %>%
count() %>%
spread(type, n)
courriel <- newspaper %>%
filter(lexical == "email") %>%
select(type, source, time) %>%
group_by(type, source, time) %>%
count() %>%
spread(type, n) %>%
mutate(english = replace_na(english, 0),
prescribed = replace_na(prescribed, 0),
alternative = replace_na(alternative, 0),
percentage_en = english / (english + prescribed + alternative),
percentage_pr = prescribed / (english + prescribed + alternative),
percentage_alt = alternative / (english + prescribed + alternative)) %>%
ungroup() %>%
select(time, source, percentage_en, percentage_pr, percentage_alt) %>%
gather(type, percentage, source, -time) %>%
mutate(type = as.factor(type),
type = recode(type, "percentage_en" = "email",
"percentage_alt" = "mail",
"percentage_pr" = "courriel"),
type = relevel(as.factor(type), ref = "courriel"),
source = as.factor(source))
courriel <- newspaper %>%
filter(lexical == "email") %>%
select(type, source, time) %>%
group_by(type, source, time) %>%
count() %>%
spread(type, n) %>%
mutate(english = replace_na(english, 0),
prescribed = replace_na(prescribed, 0),
alternative = replace_na(alternative, 0),
percentage_en = english / (english + prescribed + alternative),
percentage_pr = prescribed / (english + prescribed + alternative),
percentage_alt = alternative / (english + prescribed + alternative)) %>%
ungroup() %>%
select(time, source, percentage_en, percentage_pr, percentage_alt) %>%
gather(type, percentage, source, -time)
View(courriel)
courriel <- newspaper %>%
filter(lexical == "email") %>%
select(type, source, time) %>%
group_by(type, source, time) %>%
count() %>%
spread(type, n) %>%
mutate(english = replace_na(english, 0),
prescribed = replace_na(prescribed, 0),
alternative = replace_na(alternative, 0),
percentage_en = english / (english + prescribed + alternative),
percentage_pr = prescribed / (english + prescribed + alternative),
percentage_alt = alternative / (english + prescribed + alternative)) %>%
ungroup() %>%
select(time, source, percentage_en, percentage_pr, percentage_alt) %>%
gather(type, percentage, -time)
courriel <- newspaper %>%
filter(lexical == "email") %>%
select(type, source, time) %>%
group_by(type, source, time) %>%
count() %>%
spread(type, n) %>%
mutate(english = replace_na(english, 0),
prescribed = replace_na(prescribed, 0),
alternative = replace_na(alternative, 0),
percentage_en = english / (english + prescribed + alternative),
percentage_pr = prescribed / (english + prescribed + alternative),
percentage_alt = alternative / (english + prescribed + alternative)) %>%
ungroup() %>%
select(time, source, percentage_en, percentage_pr, percentage_alt)
courriel <- newspaper %>%
filter(lexical == "email") %>%
select(type, source, time) %>%
group_by(type, source, time) %>%
count() %>%
spread(type, n) %>%
mutate(english = replace_na(english, 0),
prescribed = replace_na(prescribed, 0),
alternative = replace_na(alternative, 0),
percentage_en = english / (english + prescribed + alternative),
percentage_pr = prescribed / (english + prescribed + alternative),
percentage_alt = alternative / (english + prescribed + alternative)) %>%
ungroup() %>%
select(time, source, percentage_en, percentage_pr, percentage_alt) %>%
gather(type, percentage, source, -time)
courriel <- newspaper %>%
filter(lexical == "email") %>%
select(type, source, time) %>%
group_by(type, source, time) %>%
count() %>%
spread(type, n) %>%
mutate(english = replace_na(english, 0),
prescribed = replace_na(prescribed, 0),
alternative = replace_na(alternative, 0),
percentage_en = english / (english + prescribed + alternative),
percentage_pr = prescribed / (english + prescribed + alternative),
percentage_alt = alternative / (english + prescribed + alternative)) %>%
ungroup() %>%
select(time, source, percentage_en, percentage_pr, percentage_alt) %>%
gather(source, type, percentage, -time)
courriel <- newspaper %>%
filter(lexical == "email") %>%
select(type, source, time) %>%
group_by(type, source, time) %>%
count() %>%
spread(type, n) %>%
mutate(english = replace_na(english, 0),
prescribed = replace_na(prescribed, 0),
alternative = replace_na(alternative, 0),
percentage_en = english / (english + prescribed + alternative),
percentage_pr = prescribed / (english + prescribed + alternative),
percentage_alt = alternative / (english + prescribed + alternative)) %>%
ungroup() %>%
select(time, source, percentage_en, percentage_pr, percentage_alt)
View(courriel)
courriel_variants <- courriel %>%
select(time, percentage_en, percentage_pr, percentage_alt) %>%
gather(type, percentage, -time) %>%
mutate(type = as.factor(type),
type = recode(type, "percentage_en" = "email",
"percentage_alt" = "mail",
"percentage_pr" = "courriel"),
type = relevel(as.factor(type), ref = "courriel"))
View(courriel_variants)
courriel <- newspaper %>%
filter(lexical == "email") %>%
select(type, time) %>%
group_by(type, time) %>%
count() %>%
spread(type, n) %>%
mutate(english = replace_na(english, 0),
prescribed = replace_na(prescribed, 0),
alternative = replace_na(alternative, 0),
percentage_en = english / (english + prescribed + alternative),
percentage_pr = prescribed / (english + prescribed + alternative),
percentage_alt = alternative / (english + prescribed + alternative)) %>%
ungroup() %>%
select(time, source, percentage_en, percentage_pr, percentage_alt) %>%
gather(type, percentage, -time) %>%
mutate(type = as.factor(type),
type = recode(type, "percentage_en" = "email",
"percentage_alt" = "mail",
"percentage_pr" = "courriel"),
type = relevel(as.factor(type), ref = "courriel"))
courriel <- newspaper %>%
filter(lexical == "email") %>%
select(type, time) %>%
group_by(type, time) %>%
count() %>%
spread(type, n) %>%
mutate(english = replace_na(english, 0),
prescribed = replace_na(prescribed, 0),
alternative = replace_na(alternative, 0),
percentage_en = english / (english + prescribed + alternative),
percentage_pr = prescribed / (english + prescribed + alternative),
percentage_alt = alternative / (english + prescribed + alternative)) %>%
ungroup() %>%
select(time, percentage_en, percentage_pr, percentage_alt) %>%
gather(type, percentage, -time) %>%
mutate(type = as.factor(type),
type = recode(type, "percentage_en" = "email",
"percentage_alt" = "mail",
"percentage_pr" = "courriel"),
type = relevel(as.factor(type), ref = "courriel"))
View(courriel)
gg_courriel <- courriel %>%
ggplot(aes(x = time, y = percentage, color = type)) + geom_smooth(method = loess, se = FALSE) +
labs(x = "Time in years", y = "Distribution", color = "Type") +
scale_x_continuous(limits = c(-156,156),
breaks = c(-156,-104,-52,0,52,104,156),
labels = c("-3", "-2", "-1","prescription", "1", "2", "3")) +
scale_y_continuous(limits = c(0,1), breaks = c(0,0.25,0.5,0.75,1),
labels = c("0",".25",".50",".75","1")) +
geom_vline(xintercept = 0, color = "red") +
theme(text = element_text(family = "Times"),
axis.title = element_text(size = 10),
axis.text = element_text(size = 10),
legend.text = element_text(size = 10),
legend.position = "right",
strip.background = element_rect(fill = "white"),
panel.background = element_rect(fill = 'white', color = 'black'),
panel.grid.major = element_line(color = "grey95"),
panel.grid.minor = element_blank(),
panel.border = element_rect(fill = "NA"))
gg_courriel
courriel_source <- newspaper %>%
filter(lexical == "email") %>%
select(type, source, time) %>%
group_by(type, source, time) %>%
count() %>%
spread(type, n) %>%
mutate(english = replace_na(english, 0),
prescribed = replace_na(prescribed, 0),
alternative = replace_na(alternative, 0),
percentage_en = english / (english + prescribed + alternative),
percentage_pr = prescribed / (english + prescribed + alternative),
percentage_alt = alternative / (english + prescribed + alternative)) %>%
ungroup() %>%
select(time, source, percentage_pr)
View(courriel_source)
courriel_source <- newspaper %>%
filter(lexical == "email") %>%
select(type, source, time) %>%
group_by(type, source, time) %>%
count() %>%
spread(type, n) %>%
mutate(english = replace_na(english, 0),
prescribed = replace_na(prescribed, 0),
alternative = replace_na(alternative, 0),
percentage_en = english / (english + prescribed + alternative),
percentage_pr = prescribed / (english + prescribed + alternative),
percentage_alt = alternative / (english + prescribed + alternative)) %>%
ungroup() %>%
select(time, source, percentage_pr)
source_colors <- c("La Croix" = "orange", "Le Figaro" = "steelblue1", "Le Monde" = "dodgerblue3",
"Le Parisien" = "purple", "Les Echos" = "red", "Journal du Net" = "black",
"01net" = "lightseagreen")
gg_courriel_sources <- courriel_source %>%
ggplot(aes(x = time, y = percentage_pr, color = source)) + geom_smooth(method = loess, se = FALSE) +
scale_color_manual(values = source_colors) +
labs(x = "Time in years", y = "Distribution", color = "Newspaper") +
scale_x_continuous(limits = c(-156,156),
breaks = c(-156,-104,-52,0,52,104,156),
labels = c("-3", "-2", "-1","prescription", "1", "2", "3")) +
scale_y_continuous(limits = c(0,1), breaks = c(0,0.25,0.5,0.75,1),
labels = c("0",".25",".50",".75","1")) +
geom_vline(xintercept = 0, color = "red") +
theme(text = element_text(family = "Times"),
axis.title = element_text(size = 10),
axis.text = element_text(size = 10),
legend.text = element_text(size = 10),
legend.position = "right",
strip.background = element_rect(fill = "white"),
panel.background = element_rect(fill = 'white', color = 'black'),
panel.grid.major = element_line(color = "grey95"),
panel.grid.minor = element_blank(),
panel.border = element_rect(fill = "NA"))
gg_courriel_sources
#Create data frame from the number of published terms
celf_terms <-  c("2007" = 317,"2008" = 268, "2009" = 276, "2010" = 247, "2011" = 392,
"2012" = 299, "2013" = 343, "2014" = 243, "2015" = 268, "2016" = 221,
"2017" = 231)
celf_terms <- as.data.frame(celf_terms) %>%
rownames_to_column("year") %>%
rename("count"="celf_terms") %>%
mutate(year = as.ordered(year))
#Visualize published terms
gg_celf_terms <- ggplot(celf_terms, aes(x = year, y = count)) + geom_col(fill = "dodgerblue2", width = 0.7) +
labs(x = "Year", y = "Count") +
theme(text = element_text(family = "Times"),
axis.title = element_text(size = 10),
axis.text = element_text(size = 10),
legend.text = element_text(size = 10),
legend.position = "right",
strip.background = element_rect(fill = "white"),
panel.background = element_rect(fill = 'white', color = 'black'),
panel.grid.major = element_line(color = "grey95"),
panel.grid.minor = element_blank(),
panel.border = element_rect(fill = "NA"))
gg_celf_terms
cities <- load("cities.Rda")
twitter_df <- load("twitter_df.Rda")
load("~/Dropbox/Research/RStudio/twitter_df.Rda")
load("~/Dropbox/Research/RStudio/cities.Rda")
load("~/Dropbox/Research/RStudio/quebec_cities.Rda")
hashtag <- twitter_df %>%
filter(lexical == "hashtag", date > ymd_hms("2012-07-06 00:00:00"))
library(readxl)
library(tidyr)
library(dplyr)
library(lubridate)
library(ggplot2)
library(ggmap)
library(ggrepel)
library(RColorBrewer)
library(gridExtra)
library(mgcv)
library(visreg)
hashtag <- twitter_df %>%
filter(lexical == "hashtag", date > ymd_hms("2012-07-06 00:00:00"))
cloud <- twitter_df %>%
filter(lexical == "cloud")
email <- twitter_df %>%
filter(lexical == "email")
trailer <- twitter_df %>%
filter(lexical == "trailer")
hashtag2 <- hashtag %>%
mutate(date = floor_date(date, "week"),
time = factor(as.numeric(difftime(date, min(date), units = "weeks")),
levels = c(0:365)),
time = as.numeric(as.character(time)),
influence = log10(((followers + 1) / (following + 1)) * (posts + 1)),
populationsize = log10(population)) %>%
select(time, borrow_type, populationsize, gender, influence)
gam_prep <- function(data){
data %>%
mutate(date = floor_date(date, "week"),
time = factor(as.numeric(difftime(date, min(date), units = "weeks")),
levels = c(0:365)),
time = as.numeric(as.character(time)),
influence = log10(((followers + 1) / (following + 1)) * (posts + 1)),
populationsize = log10(population)) %>%
select(time, borrow_type, populationsize, gender, influence)
}
hashtag2 <- gam_prep(hashtag)
hashtag2 <- hashtag %>%
mutate(date = floor_date(date, "week"),
time = factor(as.numeric(difftime(date, min(date), units = "weeks")),
levels = c(0:365)),
time = as.numeric(as.character(time)),
influence = log10(((followers + 1) / (following + 1)) * (posts + 1)),
populationsize = log10(population)) %>%
select(time, borrow_type, populationsize, gender, influence)
gam_prep <- function(data){
data %>%
mutate(date = floor_date(date, "week"),
time = factor(as.numeric(difftime(date, min(date), units = "weeks")),
levels = c(0:365)),
time = as.numeric(as.character(time)),
influence = log10(((followers + 1) / (following + 1)) * (posts + 1)),
populationsize = log10(population)) %>%
select(time, borrow_type, populationsize, gender, influence)
}
email2 <- gam_prep(hashtag)
cloud2 <- gam_prep(cloud)
trailer2 <- gam_prep(trailer)
hashtag2 <- gam_prep(hashtag)
hashtag_gam <- gam(borrow_type ~ s(time, k = 30) +
s(populationsize, k = 10) +
s(influence, by = gender, k = 20) +
gender,
family = "binomial", method = "REML",
data = hashtag2)
tw_gam <- function(data){
gam(borrow_type ~ s(time, k = 30) +
s(populationsize, k = 10) +
s(influence, by = gender, k = 20) +
gender,
family = "binomial", method = "REML",
data = data)
}
